{
  "version": "v5.0",
  "score_scale": 10.0,
  "grading": { "per_item_scores": [0, 0.5, 1], "aggregation": "weighted_sum" },
  "dimensions": [
    { "id": "ordering_salience","label":"Ordering & Salience","weight":0.16,
      "checks":[
        {"id":"has_role_goal_header","type":"regex","pattern":"(?i)===\\s*ROLE\\s*&\\s*GOAL\\s*==="},
        {"id":"has_numbered_tasks","type":"regex","pattern":"^\\s*\\d+\\.","flags":"m"},
        {"id":"has_end_checklist","type":"regex","pattern":"(?i)final\\s*checklist"},
        {"id":"uses_salience_cues","type":"heuristic","hint":"Presence of **bold** or ALL CAPS for must-dos"}
      ]
    },
    { "id":"context_hygiene","label":"Context Hygiene","weight":0.12,
      "checks":[
        {"id":"has_constraints_block","type":"regex","pattern":"(?i)===\\s*CONSTRAINTS\\s*==="},
        {"id":"has_references_block_or_none","type":"regex","pattern":"(?i)===\\s*REFERENCES\\s*==="},
        {"id":"low_filler_heuristic","type":"heuristic","hint":"Few/no emotional or narrative sentences unrelated to execution"}
      ]
    },
    { "id":"clarifications","label":"Clarifying Questions","weight":0.10,
      "checks":[
        {"id":"asks_if_missing_tasks_priority","type":"heuristic"},
        {"id":"asks_if_missing_constraints","type":"heuristic"},
        {"id":"asks_if_missing_output_format","type":"heuristic"}
      ],
      "rule":"Only award if info is missing; else full credit for skipping."
    },
    { "id":"load_management","label":"Load Management (Single vs Multi)","weight":0.12,
      "checks":[
        {"id":"declares_execution_mode","type":"regex","pattern":"(?i)===\\s*EXECUTION\\s*MODE\\s*==="},
        {"id":"mode_matches_bucket_count","type":"heuristic","hint":"≤2 adjacent buckets ⇒ single; else multi"}
      ]
    },
    { "id":"savepoints","label":"Savepoints (if multi-pass)","weight":0.12,
      "checks":[
        {"id":"lists_passes","type":"regex","pattern":"(?i)pass\\s*\\d+"},
        {"id":"each_pass_has_output_format","type":"heuristic","hint":"Table/bullets/JSON and ≤500 tokens"},
        {"id":"next_pass_uses_prior_savepoint","type":"heuristic"}
      ],
      "rule":"If single-pass, award full credit."
    },
    { "id":"constraints_quality","label":"Constraints Quality","weight":0.10,
      "checks":[
        {"id":"binary_rules_present","type":"heuristic","hint":"Measurable: word limits, counts, enums"},
        {"id":"vagueness_low","type":"heuristic","hint":"Few subjective adjectives without measures"}
      ]
    },
    { "id":"interference_control","label":"Interference Control","weight":0.08,
      "checks":[
        {"id":"conflicts_identified","type":"heuristic"},
        {"id":"priority_rule_set","type":"regex","pattern":"(?i)if\\s+conflict.*(takes|wins|priority)"}
      ]
    },
    { "id":"goal_modality_match","label":"Goal & Modality Match","weight":0.08,
      "checks":[
        {"id":"goal_aligned_instructions","type":"heuristic"},
        {"id":"output_format_matches_task","type":"heuristic","hint":"e.g., table for research, code for coding task"}
      ]
    },
    { "id":"termination_safety","label":"Termination & Safety","weight":0.06,
      "checks":[
        {"id":"has_stop_clause","type":"regex","pattern":"(?i)^===\\s*TERMINATION\\s*===|STOP\\s+after","flags":"m"},
        {"id":"no_unasked_self_validation","type":"heuristic"}
      ]
    },
    { "id":"middle_loss_protection","label":"Middle-loss Protection","weight":0.06,
      "checks":[
        {"id":"critical_items_repeated","type":"heuristic","hint":"Key tasks appear in both start and end blocks"}
      ]
    }
  ],
  "bucket_heuristics": {
    "adjacent_pairs": [["retrieval","synthesis"], ["synthesis","generation"], ["style","generation"]],
    "distant_pairs": [["retrieval","style"], ["creativity","validation"], ["reasoning","style"], ["creativity","retrieval"]],
    "single_pass_threshold": 2
  },
  "grading_notes": [
    "Per dimension: mean of check scores × weight.",
    "Grant 1.0 for Clarifications if all were explicit and none were asked.",
    "Grant 1.0 for Savepoints when Single-Pass is explicitly chosen and justified.",
    "Final score = score_scale × Σ(weight_i × dim_score_i)."
  ]
}